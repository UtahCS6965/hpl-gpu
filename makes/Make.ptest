#
#  -- High Performance Computing Linpack Benchmark (HPL-GPU)
#     HPL-GPU - 1.0 - 2010
#
#     David Rohr
#     Matthias Kretz
#     Matthias Bach
#     Goethe UniversitÃ¤t, Frankfurt am Main
#     Frankfurt Institute for Advanced Studies
#     (C) Copyright 2010 All Rights Reserved
#
#     Antoine P. Petitet
#     University of Tennessee, Knoxville
#     Innovative Computing Laboratory
#     (C) Copyright 2000-2008 All Rights Reserved
#
#  -- Copyright notice and Licensing terms:
#
#  Redistribution  and  use in  source and binary forms, with or without
#  modification, are  permitted provided  that the following  conditions
#  are met:
#
#  1. Redistributions  of  source  code  must retain the above copyright
#  notice, this list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce  the above copyright
#  notice, this list of conditions,  and the following disclaimer in the
#  documentation and/or other materials provided with the distribution.
#
#  3. All  advertising  materials  mentioning  features  or  use of this
#  software must display the following acknowledgements:
#  This  product  includes  software  developed  at  the  University  of
#  Tennessee, Knoxville, Innovative Computing Laboratory.
#  This product  includes software  developed at the Frankfurt Institute
#  for Advanced Studies.
#
#  4. The name of the  University,  the name of the  Laboratory,  or the
#  names  of  its  contributors  may  not  be used to endorse or promote
#  products  derived   from   this  software  without  specific  written
#  permission.
#
#  -- Disclaimer:
#
#  THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
#  OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
#  SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ======================================================================
#
include $(setupmake)
#
# ######################################################################
#
.DEFAULT_GOAL := all

INCdep           = \
   $(INCdir)/hpl_misc.h   $(INCdir)/hpl_blas.h  $(INCdir)/hpl_auxil.h   \
   $(INCdir)/hpl_gesv.h   $(INCdir)/hpl_pmisc.h $(INCdir)/hpl_pauxil.h  \
   $(INCdir)/hpl_panel.h  $(INCdir)/hpl_pgesv.h $(INCdir)/hpl_pmatgen.h \
   $(INCdir)/hpl_ptimer.h $(INCdir)/hpl_ptest.h \
   $(INCdir)/glibc_hacks.h
#
## Executable names ####################################################
# 
xhpl             = $(BINdir)/xhpl
#
## Object files ########################################################
#
HPL_pteobj       = \
   HPL_pddriver.o         HPL_pdinfo.o           HPL_pdtest.o
#
## Targets #############################################################
#
all     : dexe
#
dexe    : dexe.grd
#
$(BINdir)/HPL.dat : ../HPL.dat
	( $(CP) ../HPL.dat $(BINdir) )

ifeq ("$(call isenabled,-DHPL_GPU_RUNTIME_CONFIG)", "yes")
$(BINdir)/HPL-GPU.conf : ../HPL-GPU.conf
	( $(CP) ../HPL-GPU.conf $(BINdir) )
RUNTIME_CONF_FILE = $(BINdir)/HPL-GPU.conf
endif

$(BINdir)/node-perf.dat : ../node-perf.dat
	( $(CP) ../node-perf.dat $(BINdir) )
#
dexe.grd: $(HPL_pteobj) $(HPLlib)
	$(LINKER) $(LINKFLAGS) -o $(xhpl) $(HPL_pteobj) $(HPL_LIBS)
	$(MAKE) $(BINdir)/HPL.dat $(BINdir)/node-perf.dat $(RUNTIME_CONF_FILE)
	$(TOUCH) dexe.grd
#
# ######################################################################
#

ifeq ("$(call isenabled,-DHPL_PRINT_GIT_STATUS)", "yes")
../hpl_git_status.tmp: .FORCE
	echo \"`LANGUAGE=en git status | head -n 1` - `LANGUAGE=en git log --pretty=format:'%H' -n 1` `LANGUAGE=en git status | grep nothing\ to\ commit`\" > ../hpl_git_status.tmp

../caldgemm_git_status.tmp: .FORCE
	export HPLDIR=`pwd` && cd ../../../caldgemm && echo \"`LANGUAGE=en git status | head -n 1` - `LANGUAGE=en git log --pretty=format:'%H' -n 1` `LANGUAGE=en git status | grep nothing\ to\ commit`\" > $$HPLDIR/../caldgemm_git_status.tmp

../date.tmp: .FORCE
	echo \"`date`\" > ../date.tmp

HPL_pdinfo.o: ../hpl_git_status.tmp ../caldgemm_git_status.tmp ../date.tmp

endif

.FORCE:

HPL_pddriver.o         : ../HPL_pddriver.c         $(INCdep)
	$(CC) -o $@ -c $(CCFLAGS)  ../HPL_pddriver.c
HPL_pdinfo.o           : ../HPL_pdinfo.c           $(INCdep) .FORCE
	rm -f ../hpl_config_option_list.h
	echo $(HPL_DEFS) > ../hpl_config_option_list.tmp
	for i in `cat ../hpl_config_option_list.tmp`; do echo "sprintf( output_buffer + strlen(output_buffer), \"%s\", \"`echo $$i | sed "s/\\"/\\\\\\\\\\"/g"` \");" >> ../hpl_config_option_list.h; done
	$(CC) -o $@ -c $(CCFLAGS) "-DHPL_VERSION=\"$(HPL_VERSION)\"" ../HPL_pdinfo.c
HPL_pdtest.o           : ../HPL_pdtest.c           $(INCdep)
	$(CC) -o $@ -c $(CCFLAGS)  ../HPL_pdtest.c
#
# ######################################################################
#
clean            :
	$(RM) *.o *.grd
#
# ######################################################################
